/**
 * @author      OA Wu <comdan66@gmail.com>
 * @copyright   Copyright (c) 2015 - 2018, Ginkgo
 * @license     http://opensource.org/licenses/MIT  MIT License
 * @link        https://www.ioa.tw/
 */

@import "compass/css3/box-shadow";
@import "compass/css3/box-sizing";
@import "compass/css3/selection";
@import "compass/css3/font-face";
@import "compass/css3/text-shadow";
@import "compass/css3/border-radius";
@import "compass/css3/animation";
@import "compass/css3/transform";
@import "compass/css3/opacity";
@import "compass/css3/images";
@import "compass/css3/user-interface";
@import "compass/css3/transition";
@import "compass/css3/background-size";
@import "compass/css3/filter";
@import "compass/css3/background-clip";
@import "compass/css3/appearance";
@import "compass/utilities/color/contrast";

// @import "ui/_Radio";
// @import "ui/_Switch";
// @import "ui/_Textarea";

@mixin range-width($min: 0, $max: 0) {
  @if $max == 0 {
    @media screen and (min-width: $min) {
      @content;
    }
  } @else {
    @media screen and (max-width: $max - 1px) and (min-width: $min) {
      @content;
    }
  }
}

@mixin range-height($min: 0, $max: 0) {
  @if $max == 0 {
    @media screen and (min-height: $min) {
      @content;
    }
  } @else {
    @media screen and (max-height: $max - 1px) and (min-height: $min) {
      @content;
    }
  }
}

@mixin font-smoothing($val: antialiased) {
  -moz-osx-font-smoothing: $val;
   -webkit-font-smoothing: $val;
      -moz-font-smoothing: $val;
       -ms-font-smoothing: $val;
        -o-font-smoothing: $val;
}

@mixin overflow-docx3() {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

@mixin clearfix() {
  *zoom: 1;

  &:after {
    display: table;
    content: "";
    line-height: 0;
    clear: both;
  }
}

$CircleAnimation: false !global;
@mixin CircleAnimation() {
  @if ($CircleAnimation == false) {
    $CircleAnimation: true !global;
    @include keyframes(_CircleAnimation) { 0% { @include rotate(0); } 100% { @include rotate(360deg); } }
  }
}

@mixin button($color: rgba(69, 139, 244, 1.00), $height: 24px) {
  /**
   * @name                     Ginkgo's Button UI
   *
   * @param $color             按鈕顏色
   * @param $height            按鈕高度
   *
   * @example:
   *   <button></button>
   */

  display: inline-block;
  width: auto;
  height: $height;
  line-height: $height;

  padding-top: 0;
  padding-bottom: 0;
  
  border: 0;
  cursor: pointer;
  font-size: 13px;

  @include contrasted($color, rgba(55, 55, 55, 1.00), rgba(255, 255, 255, 1.00));
  @include box-shadow(inset 1px 1px 1px rgba(255, 255, 255, 0.15), inset -1px -1px 1px rgba(0, 0, 0, 0.15));
  @include border-radius(2px);
  @include transition(box-shadow .1s);
  
  &:hover {
    @include box-shadow(inset -1px -1px 2px rgba(0, 0, 0, 0.25), inset 1px 1px 2px rgba(255, 255, 255, 0.25));
    @include text-shadow(0 0 1px rgba(0, 0, 0, 0.25));
  }

  &:active {
    @include box-shadow(inset 1px 1px 1px rgba(0, 0, 0, 0.1));
  }

  &:focus {
    outline: 0;
  }

  $amount: 15%;
  &[disabled] {
    cursor: not-allowed;
    @include text-shadow(none);
    @include box-shadow(none);
    @include contrasted(adjust-lightness($color, $amount), adjust-lightness(rgba(55, 55, 55, 1.00), $amount), adjust-lightness(rgba(255, 255, 255, 1.00), $amount));
  }
}

@mixin checkbox($color: rgba(69, 139, 244, 1.00), $size: 20px, $loadingSize: 4px) {
  /**
   * @name                     Ginkgo's Checkbox UI
   *
   * @param $color             底色
   * @param $size              寬高
   * @param $loadingSize       Loading 寬高
   *
   * @example:
   *   <label>
   *     <input type="checkbox">
   *     <span></span>
   *   </label>
   */

  position: relative;
  
  display: inline-block;
  height: $size;
  line-height: $size;

  cursor: pointer;
  font-size: $size - 6px;
  padding-left: $size + 4px;

  > * {
    position: absolute;
    left: 0;
    top: 0;
    display: inline-block;
  }

  input {
    cursor: pointer;
    z-index: 2;
    @include opacity(0);

    &[disabled] {
      cursor: not-allowed;
    }

    &:not([disabled]):checked ~ span {
      &:before {
        @include box-shadow(inset 1px 1px 1px rgba(0, 0, 0, .1), inset 0 0 1px rgba(0, 0, 0, .1));
      }
      &:after {
        color: rgba(255, 255, 255, 1.00);
        @include text-shadow(.5px .5px 2px rgba(0, 0, 0, .3));
        @include box-shadow(none);
      }
    }
  }

  span {
    width: $size;
    height: $size;
    background-color: rgba(255, 255, 255, 1.00);
    z-index: 1;

    &:before, &:after {
      content: '';

      position: absolute;
      left: 0;
      top: 0;

      display: inline-block;
      width: 100%;
      height: 100%;

      z-index: 1;

      @include border-radius(2px);
      @include transition(border-radius .3s);
    }

    &:before {
      @include box-shadow(inset 0 0 1px rgba(0, 0, 0, .1));
    }

    &:after {
      content: "✔";
      @content;

      left: 2px;
      top: 2px;

      width: calc(100% - #{2px * 2});
      height: calc(100% - #{2px * 2});
      line-height: $size - 2px * 2;
      color: rgba(255, 255, 255, 1.00);
      text-align: center;

      background-image: none;
      background-color: rgba(255, 255, 255, 1.00);
      z-index: 2;

      @include box-shadow(.5 .5 1px rgba(0, 0, 0, .1));
      @include transition(background-color .3s, color .3s);
    }
  }

  input:not([disabled]):checked ~ span:after {
    background-color: $color;
  }

  span:before {
    background-color: $color;
  }

  &.loading {
    span {
      &:before {
        @include border-radius(50%);
        @include background-image(linear-gradient(rgba(184, 241, 148, 1.00) 0%, rgba(89, 178, 169, 1.00) 100%));
        @include animation(_CircleAnimation 1s linear infinite);
      }
      &:after {
        content: "";
        left: $loadingSize;
        top: $loadingSize;
        width: calc(100% - #{$loadingSize} * 2);
        height: calc(100% - #{$loadingSize} * 2);
        @include border-radius(50%);
      }
    }

    input:checked ~ span:after {
      background-color: white;
    }
  }
  @include CircleAnimation;
}

@mixin a($underLineHeight: 0, $d4UnderLine: false, $color: rgba(66, 133, 244, 1.00), $hoverColor: null) {
  /**
   * @name                     Ginkgo's Hyperlink UI
   *
   * @param $underLineHeight   底線高度
   * @param $d4UnderLine       預設出現底線
   * @param $color             顏色
   * @param $hoverColor        hover 時的顏色
   *
   * @example:
   *   <a></a>
   */

  color: $color;
  display: inline;
  font-weight: normal;
  text-decoration: none;
  @include transition(color .3s, border-bottom .3s);

  @if $hoverColor == null {
    $hoverColor: adjust-lightness($color, -15%);
  }

  @if $underLineHeight > 0 {
    @if($d4UnderLine) {
      border-bottom: $underLineHeight solid adjust-lightness($color, 5%);
    }
    @else {
      border-bottom: $underLineHeight solid transparent;
    }
  }
  &.active, &:hover {
    color: $hoverColor;

    @if($underLineHeight > 0) {
      border-bottom: $underLineHeight solid adjust-lightness($hoverColor, 5%);
    }
  }
}

@mixin input($borderFocusColor: rgba(100, 175, 235, 1)) {
  /**
   * @name                     Ginkgo's Input UI
   *
   * @param $borderFocusColor  文字顏色
   *
   * @example:
   *   <input />
   */

  display: inline-block;
  height: 30px;
  line-height: 30px - 2px - 1px;

  color: rgba(120, 120, 120, 1.00);
  font-size: 16px;
  padding: 0 4px;
  border: 1px solid rgba(200, 200, 200, 1.00);

  @include border-radius (2px);
  @include transition(box-shadow .3s, border-color .3s);

  @include input-placeholder {
    font-size: 14px;
    font-weight: normal;
    color: rgba(175, 175, 175, 1);
  }

  &:focus {
    outline: 0;
    border: 1px solid $borderFocusColor;
    @include box-shadow(0 0 8px rgba(red($borderFocusColor), green($borderFocusColor), blue($borderFocusColor), .6));
  }

  &[readonly] {
    cursor: not-allowed;
    background-color: rgba(250, 250, 250, 1);
    border: 1px solid rgba(225, 225, 225, 1.00);

    @include input-placeholder {
      color: rgba(200, 200, 200, 1);
    }

    &:focus {
      border: 1px solid rgba(225, 225, 225, 1.00);
      @include box-shadow(none);
    }
  }

  &[type="file"] {
    font-size: 14px;
    padding: 4px;
    line-height: 0;
    width: auto;
  }

  @content;
}

@mixin radio($color: rgba(69, 139, 244, 1.00), $size: 20px, $dotSize: 6px) {
  position: relative;
  display: inline-block;

  min-width: $size;
  height: $size;
  line-height: $size;
  padding-left: $size + 4px;
  cursor: pointer;

  > * {
    position: absolute;
    left: 0;
    top: 0;
    display: inline-block;
  }

  input {
    @include opacity(0);
    z-index: 2;
    z-index: 1;
  }

  span {
    width: $size;
    height: $size;
    z-index: 2;
    @include border-radius(50%);
    @include transition(background-color .3s);
    @include box-shadow(inset 0 0 0 .5px rgba(100, 100, 100, .500));
    
    &:before, &:after {
      position: absolute;
      display: inline-block;
    }

    &:after {
      content: '';
      
      left: $dotSize;
      top: $dotSize;

      width: calc(100% - #{$dotSize * 2});
      height: calc(100% - #{$dotSize * 2});
      background-color: white;
      
      @include scale(0);
      @include border-radius(50%);
      @include transition(transform .3s);
    }
  }

  input:checked ~ span {
    background-color: $color;
    @include box-shadow(inset 1px 1px 1px rgba(0, 0, 0, .200));
    
    &:after {
      @include box-shadow(1px 1px 1px rgba(0, 0, 0, .200));
      @include scale(1);
    }
  }

  &.loading {
    cursor: not-allowed;
    
    span {
      &:before {
        content: '';
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        @include box-shadow(inset 0 0 1px rgba(0, 0, 0, .15));
        @include border-radius(50%);
        @include background-image(linear-gradient(rgba(184, 241, 148, 1.00) 0%, rgba(89, 178, 169, 1.00) 100%));
        @include animation(_CircleAnimation 1s linear infinite);
        z-index: 1;
      }

      &:after {
        background-color: rgba(255, 255, 255, 1.00);
        @include border-radius(50%);
        @include box-shadow(0 0 1px rgba(0, 0, 0, .1));
        z-index: 2;
        left: 4px;
        top: 4px;

        width: calc(100% - #{4px * 2});
        height: calc(100% - #{4px * 2});
      }
    }
  }

  input[disabled] {
    cursor: not-allowed;
    
    ~ span {
      cursor: not-allowed;
      @include box-shadow(inset 0 0 0 .5px rgba(100, 100, 100, .300));
    }
  }
 
  @include CircleAnimation;
}